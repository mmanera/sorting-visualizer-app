{"version":3,"sources":["sortingAlgorithms/sortingAlgorithms.js","SortingVisualizer/SortingVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["swap","array","i","j","temp","getMergeSortAnimations","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","push","doMerge","getQuickSortAnimations","quickSort","left","right","partitionIndex","console","log","pivot","pivotValue","partition","SortingVisualizer","props","state","this","resetArray","min","max","random","setState","lastUnsortedIndex","getBubbleSortAnimations","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","height","largestIndex","getSelectionSortAnimations","lastIndex","firstUnsortedIndex","itemToInsert","getInsertionSortAnimations","barIIdx","barMinusOneIdx","barIStyle","barMinusOneStyle","idxToInsert","heightToInsert","barPivot","barPivotStyle","barPartitionIdx","barIIdxStyle","className","map","value","idx","key","onClick","bubbleSort","selectionSort","insertionSort","mergeSort","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7529e726.chunk.js","sourcesContent":["export function getBubbleSortAnimations(array) {\r\n  const animations = [];\r\n  for (let lastUnsortedIndex = array.length-1; lastUnsortedIndex > 0 ; lastUnsortedIndex--) {\r\n    for (let i = 0; i < lastUnsortedIndex ; i++) {\r\n      animations.push([i, i + 1])\r\n      animations.push([i, i + 1])\r\n      if (array[i] > array[i+1]) {\r\n        animations.push([true, i + 1, array[i]]);\r\n        swap(array, i, i+1);\r\n      } else {\r\n        animations.push([[false]]);\r\n      }\r\n    }\r\n  }\r\n  return animations;\r\n}\r\n\r\nexport function getSelectionSortAnimations(array) {\r\n  var animations = [];\r\n  for (let lastUnsortedIndex = array.length - 1; lastUnsortedIndex > 0 ; lastUnsortedIndex--) {\r\n    let largestIndex = 0;\r\n    for (let i = 1; i <= lastUnsortedIndex ; i++) {\r\n      animations.push([\"color\", i, largestIndex])\r\n      animations.push([\"color\", i, largestIndex])\r\n      if (array[i] > array[largestIndex]) {\r\n        largestIndex = i;\r\n      }\r\n    }\r\n    animations.push([true, largestIndex, array[largestIndex], lastUnsortedIndex]);\r\n    animations.push([[false]]);\r\n    swap(array, largestIndex, lastUnsortedIndex);\r\n  }   \r\n  return animations;\r\n}\r\n\r\nfunction swap(array, i, j) {\r\n  let temp = array[i];\r\n  array[i] = array[j];\r\n  array[j] = temp;\r\n}\r\n\r\nexport function getInsertionSortAnimations(array) {\r\n  console.log(array);\r\n  var animations = [];\r\n  for (let firstUnsortedIndex = 1; firstUnsortedIndex < array.length; firstUnsortedIndex++) {\r\n    let itemToInsert = array[firstUnsortedIndex];\r\n    let i;\r\n    for (i = firstUnsortedIndex; i > 0 && itemToInsert < array[i-1]; i--) {\r\n      animations.push([\"color\", i, i-1]);\r\n      animations.push([\"color\", i, i-1]);\r\n      animations.push([true, i, i-1]);\r\n      animations.push([[false]]);\r\n      array[i] = array[i-1];\r\n    }\r\n    animations.push([\"insert\", i, itemToInsert]);\r\n    animations.push([[false]]);\r\n    array[i] = itemToInsert;\r\n  }\r\n  return animations;\r\n}\r\n\r\nexport function getMergeSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n  return animations;\r\n}\r\n  \r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations,\r\n) {\r\n  if (startIdx === endIdx) return;\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nfunction doMerge(\r\n  mainArray,\r\n  startIdx,\r\n  middleIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations,\r\n) {\r\n  let k = startIdx;\r\n  let i = startIdx;\r\n  let j = middleIdx + 1;\r\n  while (i <= middleIdx && j <= endIdx) {\r\n    animations.push([i, j]);\r\n    animations.push([i, j]);\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    } else {\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleIdx) {\r\n    animations.push([i, i]);\r\n    animations.push([i, i]);\r\n    animations.push([k, auxiliaryArray[i]]);\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n    animations.push([j, j]);\r\n    animations.push([j, j]);\r\n    animations.push([k, auxiliaryArray[j]]);\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}\r\n\r\nexport function getQuickSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  quickSort(array, 0, array.length - 1, animations);\r\n  return animations;\r\n}\r\n\r\nfunction quickSort(array, left, right, animations){\r\n  console.log(array);\r\n  let pivot;\r\n  let partitionIndex;\r\n\r\n  if(left < right) {\r\n    pivot = right;\r\n    partitionIndex = partition(array, pivot, left, right, animations);\r\n    \r\n    quickSort(array, left, partitionIndex - 1, animations);\r\n    quickSort(array, partitionIndex + 1, right, animations);\r\n  }\r\n  return array;\r\n}\r\n   \r\nfunction partition(array, pivot, left, right, animations){\r\n  let pivotValue = array[pivot];\r\n  let partitionIndex = left;\r\n\r\n  for(let i = left; i < right; i++) {\r\n    animations.push([\"color\", i, pivot]);\r\n    animations.push([\"color\", i, pivot]);\r\n    if(array[i] < pivotValue){\r\n      console.log(\"rodando\");\r\n      animations.push([true, i, partitionIndex, array[partitionIndex]]);\r\n      animations.push([[false]]);\r\n      swap(array, i, partitionIndex);\r\n      partitionIndex++;\r\n    }\r\n  }\r\n  animations.push([true, right, partitionIndex, array[partitionIndex]]);\r\n  animations.push([[false]]);\r\n  swap(array, right, partitionIndex);\r\n  return partitionIndex;\r\n}","import React from 'react';\r\nimport './SortingVisualizer.css'\r\nimport {getBubbleSortAnimations} from '../sortingAlgorithms/sortingAlgorithms'\r\nimport {getSelectionSortAnimations} from '../sortingAlgorithms/sortingAlgorithms'\r\nimport {getInsertionSortAnimations} from '../sortingAlgorithms/sortingAlgorithms'\r\nimport {getMergeSortAnimations} from '../sortingAlgorithms/sortingAlgorithms'\r\nimport {getQuickSortAnimations} from '../sortingAlgorithms/sortingAlgorithms'\r\n\r\n// debug\r\n// const ANIMATION_SPEED_MS = 1500;\r\n// const NUMBER_OF_BARS = 50;\r\nconst ANIMATION_SPEED_MS = 1.5;\r\nconst NUMBER_OF_BARS = 150;\r\n\r\nconst BAR_COLOR = 'green';\r\nconst HIGHLIGHT_COLOR = 'white';\t\t\t\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tarray: [],\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\t\t\t\r\n\t\tthis.resetArray();\r\n\t}\r\n\r\n\tresetArray() {\r\n\t\tconst array = [];\r\n\t\tfor (let i = 0; i < NUMBER_OF_BARS; i++) {\t\t\r\n\t\t\tarray.push(randomIntFromInterval(5,500));\r\n\t\t}\r\n\t\tthis.setState({array});\r\n\t}\r\n\r\n\t// todo option for almost sorted array.\r\n\r\n\tbubbleSort() {\r\n\t\tconst animations = getBubbleSortAnimations(this.state.array);\r\n\t\tfor (let i = 0; i < animations.length; i++) {\r\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\r\n\t\t\tconst isColorChange = i % 3 !== 2;\r\n\t\t\tif(isColorChange) {\r\n\t\t\t\tconst [barOneIdx, barTwoIdx] = animations[i];\r\n\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\r\n\t\t\t\tconst color = i % 3 === 0 ? HIGHLIGHT_COLOR : BAR_COLOR;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tbarOneStyle.backgroundColor = color;\r\n\t\t\t\t\tbarTwoStyle.backgroundColor = color;\r\n\t\t\t\t}, i * ANIMATION_SPEED_MS);\r\n\t\t\t} else {\r\n\t\t\t\tif(animations[i][0] === true) {\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tconst [holder, barTwoIdx, newHeight] = animations[i];\r\n\t\t\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\r\n\t\t\t\t\t\tconst barOneStyle = arrayBars[barTwoIdx - 1].style;\r\n\t\t\t\t\t\tbarOneStyle.height = barTwoStyle.height;\r\n\t\t\t\t\t\tbarTwoStyle.height = `${newHeight}px`;\r\n\t\t\t\t\t}, i * ANIMATION_SPEED_MS);\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tselectionSort() {\r\n\t\tconst animations = getSelectionSortAnimations(this.state.array);\r\n\t\tfor (let i = 0; i < animations.length; i++) {\r\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\r\n\t\t\tif(animations[i][0] === \"color\") {\r\n\t\t\t\tconst [holder, barOneIdx, barTwoIdx] = animations[i];\r\n\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\r\n\t\t\t\tconst color = i % 2 === 0 ? HIGHLIGHT_COLOR : BAR_COLOR;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tbarOneStyle.backgroundColor = color;\r\n\t\t\t\t\tbarTwoStyle.backgroundColor = color;\r\n\t\t\t\t}, i * ANIMATION_SPEED_MS);\r\n\t\t\t} else {\r\n\t\t\t\tif(animations[i][0] === true) {\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tconst [holder, barOneIdx, newHeight, lastIndex] = animations[i];\r\n\t\t\t\t\t\tconst barTwoStyle = arrayBars[lastIndex].style;\r\n\t\t\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\t\t\t\tbarOneStyle.height = barTwoStyle.height;\r\n\t\t\t\t\t\tbarTwoStyle.height = `${newHeight}px`;\r\n\t\t\t\t\t}, i * ANIMATION_SPEED_MS);\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tinsertionSort() {\r\n\t\tconst animations = getInsertionSortAnimations(this.state.array);\r\n\t\tfor (let i = 0; i < animations.length; i++) {\r\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\r\n\t\t\tif(animations[i][0] === \"color\") {\r\n\t\t\t\tconst [holder, barOneIdx, barTwoIdx] = animations[i];\r\n\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\r\n\t\t\t\tconst color = i % 2 === 0 ? HIGHLIGHT_COLOR : BAR_COLOR;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tbarOneStyle.backgroundColor = color;\r\n\t\t\t\t\tbarTwoStyle.backgroundColor = color;\r\n\t\t\t\t}, i * ANIMATION_SPEED_MS);\r\n\t\t\t} else {\r\n\t\t\t\tif(animations[i][0] === true) {\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tconst [holder, barIIdx, barMinusOneIdx] = animations[i];\r\n\t\t\t\t\t\tconst barIStyle = arrayBars[barIIdx].style;\r\n\t\t\t\t\t\tconst barMinusOneStyle = arrayBars[barMinusOneIdx].style;\r\n\t\t\t\t\t\tbarIStyle.height = barMinusOneStyle.height;\r\n\t\t\t\t\t}, i * ANIMATION_SPEED_MS);\t\r\n\t\t\t\t} else if (animations[i][0] === \"insert\"){\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tconst [holder, idxToInsert, heightToInsert] = animations[i];\r\n\t\t\t\t\t\tconst barIStyle = arrayBars[idxToInsert].style;\r\n\t\t\t\t\t\tbarIStyle.height = `${heightToInsert}px`;\r\n\t\t\t\t\t}, i * ANIMATION_SPEED_MS);\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tquickSort() {\r\n\t\tconst animations = getQuickSortAnimations(this.state.array);\r\n\t\tconsole.log(animations);\r\n\t\tfor (let i = 0; i < animations.length; i++) {\r\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\r\n\t\t\tif(animations[i][0] === \"color\") {\r\n\t\t\t\tconst [holder, barIIdx, barPivot] = animations[i];\r\n\t\t\t\tconst barIStyle = arrayBars[barIIdx].style;\r\n\t\t\t\tconst barPivotStyle = arrayBars[barPivot].style;\r\n\t\t\t\tconst color = i % 2 === 0 ? HIGHLIGHT_COLOR : BAR_COLOR;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tbarIStyle.backgroundColor = color;\r\n\t\t\t\t\tbarPivotStyle.backgroundColor = color;\r\n\t\t\t\t}, i * ANIMATION_SPEED_MS);\r\n\t\t\t} else {\r\n\t\t\t\tif(animations[i][0] === true) {\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tconst [holder, barIIdx, barPartitionIdx, newHeight] = animations[i];\r\n\t\t\t\t\t\tconst barIIdxStyle = arrayBars[barIIdx].style;\r\n\t\t\t\t\t\tconst barPartitionIdxStyle = arrayBars[barPartitionIdx].style;\r\n\t\t\t\t\t\tbarPartitionIdxStyle.height = barIIdxStyle.height;\r\n\t\t\t\t\t\tbarIIdxStyle.height = `${newHeight}px`;\r\n\t\t\t\t\t}, i * ANIMATION_SPEED_MS);\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmergeSort() {\r\n\t\tconst animations = getMergeSortAnimations(this.state.array);\r\n\t\tfor (let i = 0; i < animations.length; i++) {\r\n\t\t\tconst arrayBars = document.getElementsByClassName('array-bar');\r\n\t\t\tconst isColorChange = i % 3 !== 2;\t\t\t\t\t\t\t\t\t\t// T T F T T F T T F T T F T T F\r\n\t\t\tif (isColorChange) {\r\n\t\t\t\tconst [barOneIdx, barTwoIdx] = animations[i];\r\n\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIdx].style;\r\n\t\t\t\tconst color = i % 3 === 0 ? HIGHLIGHT_COLOR : BAR_COLOR;   \t\t\t// T F F T F F T F F T F F T F F\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\tbarOneStyle.backgroundColor = color;\r\n\t\t\t\tbarTwoStyle.backgroundColor = color;\r\n\t\t\t\t}, i * ANIMATION_SPEED_MS);\r\n\t\t\t} else {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\tconst [barOneIdx, newHeight] = animations[i];\r\n\t\t\t\tconst barOneStyle = arrayBars[barOneIdx].style;\r\n\t\t\t\tbarOneStyle.height = `${newHeight}px`;\r\n\t\t\t\t}, i * ANIMATION_SPEED_MS);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// todo radix() {}\r\n\r\n\t// todo bogosort() {}\r\n\r\n\trender() {\r\n\t\tconst {array} = this.state;\r\n\t\r\n\t\treturn (\r\n\t\t\t<div className=\"array-container\">\r\n\t\t\t{array.map((value, idx) => (\r\n\t\t\t\t<div \r\n\t\t\t\tclassName=\"array-bar\"\r\n\t\t\t\tkey={idx}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundColor: BAR_COLOR,\r\n\t\t\t\t\theight: `${value}px`\r\n\t\t\t\t}}></div>\t\t\t\r\n\t\t\t))}\r\n\t\t\t\t<div>\r\n\t\t\t\t<button className=\"button\" onClick={() => this.resetArray()}>Generate New Array</button>\r\n\t\t\t\t<button className=\"button\" onClick={() => this.bubbleSort()}>Bubble Sort</button>\r\n\t\t\t\t<button className=\"button\" onClick={() => this.selectionSort()}>Selection Sort</button>\r\n\t\t\t\t<button className=\"button\" onClick={() => this.insertionSort()}>Insertion Sort</button>\r\n\t\t\t\t<button className=\"button\" onClick={() => this.mergeSort()}>Merge Sort</button>\r\n\t\t\t\t<button className=\"button\" onClick={() => this.quickSort()}>Quick Sort</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n\treturn Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nfunction arraysAreEqual(arrayOne, arrayTwo) {\r\n\tif (arrayOne.length !== arrayTwo.length) return false;\r\n\tfor (let i = 0; i < arrayOne.length; i++) {\r\n\t  if (arrayOne[i] !== arrayTwo[i]) {\r\n\t\treturn false;\r\n\t  }\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n// function testSortingAlgorithms() {\r\n// \tfor (let i = 0; i < 200; i++) {\r\n// \t  const array = [];\r\n// \t  const length = randomIntFromInterval(1, 1000);\r\n// \t  for (let i = 0; i < length; i++) {\r\n// \t\tarray.push(randomIntFromInterval(-1000, 1000));\r\n// \t  }\r\n// \t  const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\r\n// \t  const sortedArray = CHOOSE_SORT_ALGO(array.slice());\r\n// \t  console.log(arraysAreEqual(javaScriptSortedArray, sortedArray));\r\n// \t//   console.log('system: ' + javaScriptSortedArray);\r\n// \t//   console.log('algo: ' + sortedArray);\r\n// \t}\r\n// }","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}